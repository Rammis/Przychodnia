/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 15-cze-2016 15:21:45 				*/
/*  DBMS       : SQL Server 2008 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Badanie_fizykalne_Slownik_badan]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Badanie_fizykalne] DROP CONSTRAINT [FK_Badanie_fizykalne_Slownik_badan]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Badanie_fizykalne_Wizyta]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Badanie_fizykalne] DROP CONSTRAINT [FK_Badanie_fizykalne_Wizyta]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Badanie_lab_K_Lab]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Badanie_lab] DROP CONSTRAINT [FK_Badanie_lab_K_Lab]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Badanie_lab_Lab]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Badanie_lab] DROP CONSTRAINT [FK_Badanie_lab_Lab]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Badanie_lab_Slownik_badan]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Badanie_lab] DROP CONSTRAINT [FK_Badanie_lab_Slownik_badan]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Badanie_lab_Wizyta]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Badanie_lab] DROP CONSTRAINT [FK_Badanie_lab_Wizyta]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_K_Lab_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [K_Lab] DROP CONSTRAINT [FK_K_Lab_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Lab_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Lab] DROP CONSTRAINT [FK_Lab_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Lekarz_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Lekarz] DROP CONSTRAINT [FK_Lekarz_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Rejestracja_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Rejestracja] DROP CONSTRAINT [FK_Rejestracja_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Wizyta_Lekarz]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Wizyta] DROP CONSTRAINT [FK_Wizyta_Lekarz]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Wizyta_Pacjent]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Wizyta] DROP CONSTRAINT [FK_Wizyta_Pacjent]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_Wizyta_Rejestracja]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [Wizyta] DROP CONSTRAINT [FK_Wizyta_Rejestracja]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Badanie_fizykalne]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Badanie_fizykalne]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Badanie_lab]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Badanie_lab]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[K_Lab]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [K_Lab]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Lab]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Lab]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Lekarz]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Lekarz]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Pacjent]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Pacjent]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Rejestracja]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Rejestracja]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Slownik_badan]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Slownik_badan]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[User]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Wizyta]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Wizyta]
GO

/* Create Tables */

CREATE TABLE [Badanie_fizykalne]
(
	[id_bad_fiz] int NOT NULL IDENTITY (1, 1),
	[data_wykonania] datetime NOT NULL,
	[wynik] text NOT NULL,
	[id_wizyty] int NOT NULL,
	[kod] int NOT NULL
)
GO

CREATE TABLE [Badanie_lab]
(
	[id_bad_lab] int NOT NULL IDENTITY (1, 1),
	[data_zlecenia] datetime NOT NULL,
	[data_wyk_bad] datetime NULL,
	[data_zatw_bad] datetime NULL,
	[opis] text NOT NULL,
	[wynik] text NULL,
	[uwagi_klab] text NULL,
	[stan] varchar(20) NOT NULL,
	[id_wizyty] int NOT NULL,
	[id_lab] int NOT NULL,
	[id_klab] int NOT NULL,
	[kod] int NOT NULL,
	[uwagi_lab] text NULL,
	[uwagi_lekarz] text NULL
)
GO

CREATE TABLE [K_Lab]
(
	[id_klab] int NOT NULL IDENTITY (1, 1),
	[user_name] varchar(20) NOT NULL
)
GO

CREATE TABLE [Lab]
(
	[id_lab] int NOT NULL IDENTITY (1, 1),
	[user_name] varchar(20) NOT NULL
)
GO

CREATE TABLE [Lekarz]
(
	[id_lekarza] int NOT NULL IDENTITY (1, 1),
	[nr_uprawnienia] int NOT NULL,
	[user_name] varchar(20) NOT NULL
)
GO

CREATE TABLE [Pacjent]
(
	[id_pac] int NOT NULL IDENTITY (1, 1),
	[nazwisko] varchar(50) NOT NULL,
	[imie] varchar(20) NOT NULL,
	[PESEL] varchar(11) NOT NULL
)
GO

CREATE TABLE [Rejestracja]
(
	[id_rej] int NOT NULL IDENTITY (1, 1),
	[user_name] varchar(20) NOT NULL
)
GO

CREATE TABLE [Slownik_badan]
(
	[kod] int NOT NULL IDENTITY (1, 1),
	[typ] varchar(10) NOT NULL,
	[nazwa] varchar(50) NOT NULL,
	[opis] text NOT NULL
)
GO

CREATE TABLE [User]
(
	[user_name] varchar(20) NOT NULL,
	[password] varchar(20) NOT NULL,
	[data_konc] datetime NOT NULL,
	[role] varchar(20) NOT NULL,
	[nazwisko] varchar(50) NOT NULL,
	[imie] varchar(20) NOT NULL
)
GO

CREATE TABLE [Wizyta]
(
	[id_wizyty] int NOT NULL IDENTITY (1, 1),
	[opis] text NOT NULL,
	[diagnoza] text NULL,
	[stan] varchar(20) NULL,
	[data_rej] datetime NOT NULL,
	[data_wyk_wizyty] datetime NULL,
	[id_pac] int NOT NULL,
	[id_rej] int NOT NULL,
	[id_lekarza] int NOT NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [Badanie_fizykalne] 
 ADD CONSTRAINT [PK_Badanie_fizykalne]
	PRIMARY KEY CLUSTERED ([id_bad_fiz] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Badanie_fizykalne_Slownik_badan] 
 ON [Badanie_fizykalne] ([kod] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Badanie_fizykalne_Wizyta] 
 ON [Badanie_fizykalne] ([id_wizyty] ASC)
GO

ALTER TABLE [Badanie_lab] 
 ADD CONSTRAINT [PK_Badanie_lab]
	PRIMARY KEY CLUSTERED ([id_bad_lab] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Badanie_lab_K_Lab] 
 ON [Badanie_lab] ([id_klab] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Badanie_lab_Lab] 
 ON [Badanie_lab] ([id_lab] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Badanie_lab_Slownik_badan] 
 ON [Badanie_lab] ([kod] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Badanie_lab_Wizyta] 
 ON [Badanie_lab] ([id_wizyty] ASC)
GO

ALTER TABLE [K_Lab] 
 ADD CONSTRAINT [PK_K_Lab]
	PRIMARY KEY CLUSTERED ([id_klab] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_K_Lab_User] 
 ON [K_Lab] ([user_name] ASC)
GO

ALTER TABLE [Lab] 
 ADD CONSTRAINT [PK_Lab]
	PRIMARY KEY CLUSTERED ([id_lab] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Lab_User] 
 ON [Lab] ([user_name] ASC)
GO

ALTER TABLE [Lekarz] 
 ADD CONSTRAINT [PK_Lekarz]
	PRIMARY KEY CLUSTERED ([id_lekarza] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Lekarz_User] 
 ON [Lekarz] ([user_name] ASC)
GO

ALTER TABLE [Pacjent] 
 ADD CONSTRAINT [PK_Pacjent]
	PRIMARY KEY CLUSTERED ([id_pac] ASC)
GO

ALTER TABLE [Rejestracja] 
 ADD CONSTRAINT [PK_Rej]
	PRIMARY KEY CLUSTERED ([id_rej] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Rejestracja_User] 
 ON [Rejestracja] ([user_name] ASC)
GO

ALTER TABLE [Slownik_badan] 
 ADD CONSTRAINT [PK_Slownik_badan]
	PRIMARY KEY CLUSTERED ([kod] ASC)
GO

ALTER TABLE [User] 
 ADD CONSTRAINT [PK_User]
	PRIMARY KEY CLUSTERED ([user_name] ASC)
GO

ALTER TABLE [Wizyta] 
 ADD CONSTRAINT [PK_Wizyta]
	PRIMARY KEY CLUSTERED ([id_wizyty] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Wizyta_Lekarz] 
 ON [Wizyta] ([id_lekarza] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Wizyta_Pacjent] 
 ON [Wizyta] ([id_pac] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_Wizyta_Rejestracja] 
 ON [Wizyta] ([id_rej] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [Badanie_fizykalne] ADD CONSTRAINT [FK_Badanie_fizykalne_Slownik_badan]
	FOREIGN KEY ([kod]) REFERENCES [Slownik_badan] ([kod]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Badanie_fizykalne] ADD CONSTRAINT [FK_Badanie_fizykalne_Wizyta]
	FOREIGN KEY ([id_wizyty]) REFERENCES [Wizyta] ([id_wizyty]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Badanie_lab] ADD CONSTRAINT [FK_Badanie_lab_K_Lab]
	FOREIGN KEY ([id_klab]) REFERENCES [K_Lab] ([id_klab]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Badanie_lab] ADD CONSTRAINT [FK_Badanie_lab_Lab]
	FOREIGN KEY ([id_lab]) REFERENCES [Lab] ([id_lab]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Badanie_lab] ADD CONSTRAINT [FK_Badanie_lab_Slownik_badan]
	FOREIGN KEY ([kod]) REFERENCES [Slownik_badan] ([kod]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Badanie_lab] ADD CONSTRAINT [FK_Badanie_lab_Wizyta]
	FOREIGN KEY ([id_wizyty]) REFERENCES [Wizyta] ([id_wizyty]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [K_Lab] ADD CONSTRAINT [FK_K_Lab_User]
	FOREIGN KEY ([user_name]) REFERENCES [User] ([user_name]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Lab] ADD CONSTRAINT [FK_Lab_User]
	FOREIGN KEY ([user_name]) REFERENCES [User] ([user_name]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Lekarz] ADD CONSTRAINT [FK_Lekarz_User]
	FOREIGN KEY ([user_name]) REFERENCES [User] ([user_name]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Rejestracja] ADD CONSTRAINT [FK_Rejestracja_User]
	FOREIGN KEY ([user_name]) REFERENCES [User] ([user_name]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Wizyta] ADD CONSTRAINT [FK_Wizyta_Lekarz]
	FOREIGN KEY ([id_lekarza]) REFERENCES [Lekarz] ([id_lekarza]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Wizyta] ADD CONSTRAINT [FK_Wizyta_Pacjent]
	FOREIGN KEY ([id_pac]) REFERENCES [Pacjent] ([id_pac]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [Wizyta] ADD CONSTRAINT [FK_Wizyta_Rejestracja]
	FOREIGN KEY ([id_rej]) REFERENCES [Rejestracja] ([id_rej]) ON DELETE No Action ON UPDATE No Action
GO
