#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Przychodnia1")]
	public partial class Przychodnia1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBadanie_fizykalne(Badanie_fizykalne instance);
    partial void UpdateBadanie_fizykalne(Badanie_fizykalne instance);
    partial void DeleteBadanie_fizykalne(Badanie_fizykalne instance);
    partial void InsertBadanie_lab(Badanie_lab instance);
    partial void UpdateBadanie_lab(Badanie_lab instance);
    partial void DeleteBadanie_lab(Badanie_lab instance);
    partial void InsertK_Lab(K_Lab instance);
    partial void UpdateK_Lab(K_Lab instance);
    partial void DeleteK_Lab(K_Lab instance);
    partial void InsertLab(Lab instance);
    partial void UpdateLab(Lab instance);
    partial void DeleteLab(Lab instance);
    partial void InsertLekarz(Lekarz instance);
    partial void UpdateLekarz(Lekarz instance);
    partial void DeleteLekarz(Lekarz instance);
    partial void InsertPacjent(Pacjent instance);
    partial void UpdatePacjent(Pacjent instance);
    partial void DeletePacjent(Pacjent instance);
    partial void InsertRejestracja(Rejestracja instance);
    partial void UpdateRejestracja(Rejestracja instance);
    partial void DeleteRejestracja(Rejestracja instance);
    partial void InsertSlownik_badan(Slownik_badan instance);
    partial void UpdateSlownik_badan(Slownik_badan instance);
    partial void DeleteSlownik_badan(Slownik_badan instance);
    partial void InsertWizyta(Wizyta instance);
    partial void UpdateWizyta(Wizyta instance);
    partial void DeleteWizyta(Wizyta instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public Przychodnia1DataContext() : 
				base(global::DataLayer.Properties.Settings.Default.Przychodnia1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Przychodnia1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Przychodnia1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Przychodnia1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Przychodnia1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Badanie_fizykalne> Badanie_fizykalnes
		{
			get
			{
				return this.GetTable<Badanie_fizykalne>();
			}
		}
		
		public System.Data.Linq.Table<Badanie_lab> Badanie_labs
		{
			get
			{
				return this.GetTable<Badanie_lab>();
			}
		}
		
		public System.Data.Linq.Table<K_Lab> K_Labs
		{
			get
			{
				return this.GetTable<K_Lab>();
			}
		}
		
		public System.Data.Linq.Table<Lab> Labs
		{
			get
			{
				return this.GetTable<Lab>();
			}
		}
		
		public System.Data.Linq.Table<Lekarz> Lekarzs
		{
			get
			{
				return this.GetTable<Lekarz>();
			}
		}
		
		public System.Data.Linq.Table<Pacjent> Pacjents
		{
			get
			{
				return this.GetTable<Pacjent>();
			}
		}
		
		public System.Data.Linq.Table<Rejestracja> Rejestracjas
		{
			get
			{
				return this.GetTable<Rejestracja>();
			}
		}
		
		public System.Data.Linq.Table<Slownik_badan> Slownik_badans
		{
			get
			{
				return this.GetTable<Slownik_badan>();
			}
		}
		
		public System.Data.Linq.Table<Wizyta> Wizytas
		{
			get
			{
				return this.GetTable<Wizyta>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Badanie_fizykalne")]
	public partial class Badanie_fizykalne : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_bad_fiz;
		
		private System.DateTime _data_wykonania;
		
		private string _wynik;
		
		private int _id_wizyty;
		
		private int _kod;
		
		private EntityRef<Slownik_badan> _Slownik_badan;
		
		private EntityRef<Wizyta> _Wizyta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_bad_fizChanging(int value);
    partial void Onid_bad_fizChanged();
    partial void Ondata_wykonaniaChanging(System.DateTime value);
    partial void Ondata_wykonaniaChanged();
    partial void OnwynikChanging(string value);
    partial void OnwynikChanged();
    partial void Onid_wizytyChanging(int value);
    partial void Onid_wizytyChanged();
    partial void OnkodChanging(int value);
    partial void OnkodChanged();
    #endregion
		
		public Badanie_fizykalne()
		{
			this._Slownik_badan = default(EntityRef<Slownik_badan>);
			this._Wizyta = default(EntityRef<Wizyta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bad_fiz", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_bad_fiz
		{
			get
			{
				return this._id_bad_fiz;
			}
			set
			{
				if ((this._id_bad_fiz != value))
				{
					this.Onid_bad_fizChanging(value);
					this.SendPropertyChanging();
					this._id_bad_fiz = value;
					this.SendPropertyChanged("id_bad_fiz");
					this.Onid_bad_fizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_wykonania", DbType="DateTime NOT NULL")]
		public System.DateTime data_wykonania
		{
			get
			{
				return this._data_wykonania;
			}
			set
			{
				if ((this._data_wykonania != value))
				{
					this.Ondata_wykonaniaChanging(value);
					this.SendPropertyChanging();
					this._data_wykonania = value;
					this.SendPropertyChanged("data_wykonania");
					this.Ondata_wykonaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wynik", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string wynik
		{
			get
			{
				return this._wynik;
			}
			set
			{
				if ((this._wynik != value))
				{
					this.OnwynikChanging(value);
					this.SendPropertyChanging();
					this._wynik = value;
					this.SendPropertyChanged("wynik");
					this.OnwynikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_wizyty", DbType="Int NOT NULL")]
		public int id_wizyty
		{
			get
			{
				return this._id_wizyty;
			}
			set
			{
				if ((this._id_wizyty != value))
				{
					if (this._Wizyta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_wizytyChanging(value);
					this.SendPropertyChanging();
					this._id_wizyty = value;
					this.SendPropertyChanged("id_wizyty");
					this.Onid_wizytyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kod", DbType="Int NOT NULL")]
		public int kod
		{
			get
			{
				return this._kod;
			}
			set
			{
				if ((this._kod != value))
				{
					if (this._Slownik_badan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkodChanging(value);
					this.SendPropertyChanging();
					this._kod = value;
					this.SendPropertyChanged("kod");
					this.OnkodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Slownik_badan_Badanie_fizykalne", Storage="_Slownik_badan", ThisKey="kod", OtherKey="kod", IsForeignKey=true)]
		public Slownik_badan Slownik_badan
		{
			get
			{
				return this._Slownik_badan.Entity;
			}
			set
			{
				Slownik_badan previousValue = this._Slownik_badan.Entity;
				if (((previousValue != value) 
							|| (this._Slownik_badan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Slownik_badan.Entity = null;
						previousValue.Badanie_fizykalnes.Remove(this);
					}
					this._Slownik_badan.Entity = value;
					if ((value != null))
					{
						value.Badanie_fizykalnes.Add(this);
						this._kod = value.kod;
					}
					else
					{
						this._kod = default(int);
					}
					this.SendPropertyChanged("Slownik_badan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wizyta_Badanie_fizykalne", Storage="_Wizyta", ThisKey="id_wizyty", OtherKey="id_wizyty", IsForeignKey=true)]
		public Wizyta Wizyta
		{
			get
			{
				return this._Wizyta.Entity;
			}
			set
			{
				Wizyta previousValue = this._Wizyta.Entity;
				if (((previousValue != value) 
							|| (this._Wizyta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Wizyta.Entity = null;
						previousValue.Badanie_fizykalnes.Remove(this);
					}
					this._Wizyta.Entity = value;
					if ((value != null))
					{
						value.Badanie_fizykalnes.Add(this);
						this._id_wizyty = value.id_wizyty;
					}
					else
					{
						this._id_wizyty = default(int);
					}
					this.SendPropertyChanged("Wizyta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Badanie_lab")]
	public partial class Badanie_lab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_bad_lab;
		
		private System.DateTime _data_zlecenia;
		
		private System.Nullable<System.DateTime> _data_wyk_bad;
		
		private System.Nullable<System.DateTime> _data_zatw_bad;
		
		private string _opis;
		
		private string _wynik;
		
		private string _uwagi_klab;
		
		private string _stan;
		
		private int _id_wizyty;
		
		private int _id_lab;
		
		private int _id_klab;
		
		private int _kod;
		
		private string _uwagi_lab;
		
		private string _uwagi_lekarz;
		
		private EntityRef<K_Lab> _K_Lab;
		
		private EntityRef<Lab> _Lab;
		
		private EntityRef<Slownik_badan> _Slownik_badan;
		
		private EntityRef<Wizyta> _Wizyta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_bad_labChanging(int value);
    partial void Onid_bad_labChanged();
    partial void Ondata_zleceniaChanging(System.DateTime value);
    partial void Ondata_zleceniaChanged();
    partial void Ondata_wyk_badChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_wyk_badChanged();
    partial void Ondata_zatw_badChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_zatw_badChanged();
    partial void OnopisChanging(string value);
    partial void OnopisChanged();
    partial void OnwynikChanging(string value);
    partial void OnwynikChanged();
    partial void Onuwagi_klabChanging(string value);
    partial void Onuwagi_klabChanged();
    partial void OnstanChanging(string value);
    partial void OnstanChanged();
    partial void Onid_wizytyChanging(int value);
    partial void Onid_wizytyChanged();
    partial void Onid_labChanging(int value);
    partial void Onid_labChanged();
    partial void Onid_klabChanging(int value);
    partial void Onid_klabChanged();
    partial void OnkodChanging(int value);
    partial void OnkodChanged();
    partial void Onuwagi_labChanging(string value);
    partial void Onuwagi_labChanged();
    partial void Onuwagi_lekarzChanging(string value);
    partial void Onuwagi_lekarzChanged();
    #endregion
		
		public Badanie_lab()
		{
			this._K_Lab = default(EntityRef<K_Lab>);
			this._Lab = default(EntityRef<Lab>);
			this._Slownik_badan = default(EntityRef<Slownik_badan>);
			this._Wizyta = default(EntityRef<Wizyta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bad_lab", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_bad_lab
		{
			get
			{
				return this._id_bad_lab;
			}
			set
			{
				if ((this._id_bad_lab != value))
				{
					this.Onid_bad_labChanging(value);
					this.SendPropertyChanging();
					this._id_bad_lab = value;
					this.SendPropertyChanged("id_bad_lab");
					this.Onid_bad_labChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_zlecenia", DbType="DateTime NOT NULL")]
		public System.DateTime data_zlecenia
		{
			get
			{
				return this._data_zlecenia;
			}
			set
			{
				if ((this._data_zlecenia != value))
				{
					this.Ondata_zleceniaChanging(value);
					this.SendPropertyChanging();
					this._data_zlecenia = value;
					this.SendPropertyChanged("data_zlecenia");
					this.Ondata_zleceniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_wyk_bad", DbType="DateTime")]
		public System.Nullable<System.DateTime> data_wyk_bad
		{
			get
			{
				return this._data_wyk_bad;
			}
			set
			{
				if ((this._data_wyk_bad != value))
				{
					this.Ondata_wyk_badChanging(value);
					this.SendPropertyChanging();
					this._data_wyk_bad = value;
					this.SendPropertyChanged("data_wyk_bad");
					this.Ondata_wyk_badChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_zatw_bad", DbType="DateTime")]
		public System.Nullable<System.DateTime> data_zatw_bad
		{
			get
			{
				return this._data_zatw_bad;
			}
			set
			{
				if ((this._data_zatw_bad != value))
				{
					this.Ondata_zatw_badChanging(value);
					this.SendPropertyChanging();
					this._data_zatw_bad = value;
					this.SendPropertyChanged("data_zatw_bad");
					this.Ondata_zatw_badChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string opis
		{
			get
			{
				return this._opis;
			}
			set
			{
				if ((this._opis != value))
				{
					this.OnopisChanging(value);
					this.SendPropertyChanging();
					this._opis = value;
					this.SendPropertyChanged("opis");
					this.OnopisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wynik", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string wynik
		{
			get
			{
				return this._wynik;
			}
			set
			{
				if ((this._wynik != value))
				{
					this.OnwynikChanging(value);
					this.SendPropertyChanging();
					this._wynik = value;
					this.SendPropertyChanged("wynik");
					this.OnwynikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uwagi_klab", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string uwagi_klab
		{
			get
			{
				return this._uwagi_klab;
			}
			set
			{
				if ((this._uwagi_klab != value))
				{
					this.Onuwagi_klabChanging(value);
					this.SendPropertyChanging();
					this._uwagi_klab = value;
					this.SendPropertyChanged("uwagi_klab");
					this.Onuwagi_klabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stan", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string stan
		{
			get
			{
				return this._stan;
			}
			set
			{
				if ((this._stan != value))
				{
					this.OnstanChanging(value);
					this.SendPropertyChanging();
					this._stan = value;
					this.SendPropertyChanged("stan");
					this.OnstanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_wizyty", DbType="Int NOT NULL")]
		public int id_wizyty
		{
			get
			{
				return this._id_wizyty;
			}
			set
			{
				if ((this._id_wizyty != value))
				{
					if (this._Wizyta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_wizytyChanging(value);
					this.SendPropertyChanging();
					this._id_wizyty = value;
					this.SendPropertyChanged("id_wizyty");
					this.Onid_wizytyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lab", DbType="Int NOT NULL")]
		public int id_lab
		{
			get
			{
				return this._id_lab;
			}
			set
			{
				if ((this._id_lab != value))
				{
					if (this._Lab.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_labChanging(value);
					this.SendPropertyChanging();
					this._id_lab = value;
					this.SendPropertyChanged("id_lab");
					this.Onid_labChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_klab", DbType="Int NOT NULL")]
		public int id_klab
		{
			get
			{
				return this._id_klab;
			}
			set
			{
				if ((this._id_klab != value))
				{
					if (this._K_Lab.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_klabChanging(value);
					this.SendPropertyChanging();
					this._id_klab = value;
					this.SendPropertyChanged("id_klab");
					this.Onid_klabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kod", DbType="Int NOT NULL")]
		public int kod
		{
			get
			{
				return this._kod;
			}
			set
			{
				if ((this._kod != value))
				{
					if (this._Slownik_badan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkodChanging(value);
					this.SendPropertyChanging();
					this._kod = value;
					this.SendPropertyChanged("kod");
					this.OnkodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uwagi_lab", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string uwagi_lab
		{
			get
			{
				return this._uwagi_lab;
			}
			set
			{
				if ((this._uwagi_lab != value))
				{
					this.Onuwagi_labChanging(value);
					this.SendPropertyChanging();
					this._uwagi_lab = value;
					this.SendPropertyChanged("uwagi_lab");
					this.Onuwagi_labChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uwagi_lekarz", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string uwagi_lekarz
		{
			get
			{
				return this._uwagi_lekarz;
			}
			set
			{
				if ((this._uwagi_lekarz != value))
				{
					this.Onuwagi_lekarzChanging(value);
					this.SendPropertyChanging();
					this._uwagi_lekarz = value;
					this.SendPropertyChanged("uwagi_lekarz");
					this.Onuwagi_lekarzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="K_Lab_Badanie_lab", Storage="_K_Lab", ThisKey="id_klab", OtherKey="id_klab", IsForeignKey=true)]
		public K_Lab K_Lab
		{
			get
			{
				return this._K_Lab.Entity;
			}
			set
			{
				K_Lab previousValue = this._K_Lab.Entity;
				if (((previousValue != value) 
							|| (this._K_Lab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._K_Lab.Entity = null;
						previousValue.Badanie_labs.Remove(this);
					}
					this._K_Lab.Entity = value;
					if ((value != null))
					{
						value.Badanie_labs.Add(this);
						this._id_klab = value.id_klab;
					}
					else
					{
						this._id_klab = default(int);
					}
					this.SendPropertyChanged("K_Lab");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lab_Badanie_lab", Storage="_Lab", ThisKey="id_lab", OtherKey="id_lab", IsForeignKey=true)]
		public Lab Lab
		{
			get
			{
				return this._Lab.Entity;
			}
			set
			{
				Lab previousValue = this._Lab.Entity;
				if (((previousValue != value) 
							|| (this._Lab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lab.Entity = null;
						previousValue.Badanie_labs.Remove(this);
					}
					this._Lab.Entity = value;
					if ((value != null))
					{
						value.Badanie_labs.Add(this);
						this._id_lab = value.id_lab;
					}
					else
					{
						this._id_lab = default(int);
					}
					this.SendPropertyChanged("Lab");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Slownik_badan_Badanie_lab", Storage="_Slownik_badan", ThisKey="kod", OtherKey="kod", IsForeignKey=true)]
		public Slownik_badan Slownik_badan
		{
			get
			{
				return this._Slownik_badan.Entity;
			}
			set
			{
				Slownik_badan previousValue = this._Slownik_badan.Entity;
				if (((previousValue != value) 
							|| (this._Slownik_badan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Slownik_badan.Entity = null;
						previousValue.Badanie_labs.Remove(this);
					}
					this._Slownik_badan.Entity = value;
					if ((value != null))
					{
						value.Badanie_labs.Add(this);
						this._kod = value.kod;
					}
					else
					{
						this._kod = default(int);
					}
					this.SendPropertyChanged("Slownik_badan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wizyta_Badanie_lab", Storage="_Wizyta", ThisKey="id_wizyty", OtherKey="id_wizyty", IsForeignKey=true)]
		public Wizyta Wizyta
		{
			get
			{
				return this._Wizyta.Entity;
			}
			set
			{
				Wizyta previousValue = this._Wizyta.Entity;
				if (((previousValue != value) 
							|| (this._Wizyta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Wizyta.Entity = null;
						previousValue.Badanie_labs.Remove(this);
					}
					this._Wizyta.Entity = value;
					if ((value != null))
					{
						value.Badanie_labs.Add(this);
						this._id_wizyty = value.id_wizyty;
					}
					else
					{
						this._id_wizyty = default(int);
					}
					this.SendPropertyChanged("Wizyta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.K_Lab")]
	public partial class K_Lab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_klab;
		
		private string _user_name;
		
		private EntitySet<Badanie_lab> _Badanie_labs;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_klabChanging(int value);
    partial void Onid_klabChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    #endregion
		
		public K_Lab()
		{
			this._Badanie_labs = new EntitySet<Badanie_lab>(new Action<Badanie_lab>(this.attach_Badanie_labs), new Action<Badanie_lab>(this.detach_Badanie_labs));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_klab", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_klab
		{
			get
			{
				return this._id_klab;
			}
			set
			{
				if ((this._id_klab != value))
				{
					this.Onid_klabChanging(value);
					this.SendPropertyChanging();
					this._id_klab = value;
					this.SendPropertyChanged("id_klab");
					this.Onid_klabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="K_Lab_Badanie_lab", Storage="_Badanie_labs", ThisKey="id_klab", OtherKey="id_klab")]
		public EntitySet<Badanie_lab> Badanie_labs
		{
			get
			{
				return this._Badanie_labs;
			}
			set
			{
				this._Badanie_labs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_K_Lab", Storage="_User", ThisKey="user_name", OtherKey="user_name", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.K_Labs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.K_Labs.Add(this);
						this._user_name = value.user_name;
					}
					else
					{
						this._user_name = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanie_labs(Badanie_lab entity)
		{
			this.SendPropertyChanging();
			entity.K_Lab = this;
		}
		
		private void detach_Badanie_labs(Badanie_lab entity)
		{
			this.SendPropertyChanging();
			entity.K_Lab = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lab")]
	public partial class Lab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_lab;
		
		private string _user_name;
		
		private EntitySet<Badanie_lab> _Badanie_labs;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_labChanging(int value);
    partial void Onid_labChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    #endregion
		
		public Lab()
		{
			this._Badanie_labs = new EntitySet<Badanie_lab>(new Action<Badanie_lab>(this.attach_Badanie_labs), new Action<Badanie_lab>(this.detach_Badanie_labs));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lab", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_lab
		{
			get
			{
				return this._id_lab;
			}
			set
			{
				if ((this._id_lab != value))
				{
					this.Onid_labChanging(value);
					this.SendPropertyChanging();
					this._id_lab = value;
					this.SendPropertyChanged("id_lab");
					this.Onid_labChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lab_Badanie_lab", Storage="_Badanie_labs", ThisKey="id_lab", OtherKey="id_lab")]
		public EntitySet<Badanie_lab> Badanie_labs
		{
			get
			{
				return this._Badanie_labs;
			}
			set
			{
				this._Badanie_labs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Lab", Storage="_User", ThisKey="user_name", OtherKey="user_name", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Labs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Labs.Add(this);
						this._user_name = value.user_name;
					}
					else
					{
						this._user_name = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanie_labs(Badanie_lab entity)
		{
			this.SendPropertyChanging();
			entity.Lab = this;
		}
		
		private void detach_Badanie_labs(Badanie_lab entity)
		{
			this.SendPropertyChanging();
			entity.Lab = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lekarz")]
	public partial class Lekarz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_lekarza;
		
		private int _nr_uprawnienia;
		
		private string _user_name;
		
		private EntitySet<Wizyta> _Wizytas;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_lekarzaChanging(int value);
    partial void Onid_lekarzaChanged();
    partial void Onnr_uprawnieniaChanging(int value);
    partial void Onnr_uprawnieniaChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    #endregion
		
		public Lekarz()
		{
			this._Wizytas = new EntitySet<Wizyta>(new Action<Wizyta>(this.attach_Wizytas), new Action<Wizyta>(this.detach_Wizytas));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lekarza", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_lekarza
		{
			get
			{
				return this._id_lekarza;
			}
			set
			{
				if ((this._id_lekarza != value))
				{
					this.Onid_lekarzaChanging(value);
					this.SendPropertyChanging();
					this._id_lekarza = value;
					this.SendPropertyChanged("id_lekarza");
					this.Onid_lekarzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_uprawnienia", DbType="Int NOT NULL")]
		public int nr_uprawnienia
		{
			get
			{
				return this._nr_uprawnienia;
			}
			set
			{
				if ((this._nr_uprawnienia != value))
				{
					this.Onnr_uprawnieniaChanging(value);
					this.SendPropertyChanging();
					this._nr_uprawnienia = value;
					this.SendPropertyChanged("nr_uprawnienia");
					this.Onnr_uprawnieniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lekarz_Wizyta", Storage="_Wizytas", ThisKey="id_lekarza", OtherKey="id_lekarza")]
		public EntitySet<Wizyta> Wizytas
		{
			get
			{
				return this._Wizytas;
			}
			set
			{
				this._Wizytas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Lekarz", Storage="_User", ThisKey="user_name", OtherKey="user_name", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Lekarzs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Lekarzs.Add(this);
						this._user_name = value.user_name;
					}
					else
					{
						this._user_name = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Lekarz = this;
		}
		
		private void detach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Lekarz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pacjent")]
	public partial class Pacjent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_pac;
		
		private string _nazwisko;
		
		private string _imie;
		
		private string _PESEL;
		
		private EntitySet<Wizyta> _Wizytas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_pacChanging(int value);
    partial void Onid_pacChanged();
    partial void OnnazwiskoChanging(string value);
    partial void OnnazwiskoChanged();
    partial void OnimieChanging(string value);
    partial void OnimieChanged();
    partial void OnPESELChanging(string value);
    partial void OnPESELChanged();
    #endregion
		
		public Pacjent()
		{
			this._Wizytas = new EntitySet<Wizyta>(new Action<Wizyta>(this.attach_Wizytas), new Action<Wizyta>(this.detach_Wizytas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pac", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_pac
		{
			get
			{
				return this._id_pac;
			}
			set
			{
				if ((this._id_pac != value))
				{
					this.Onid_pacChanging(value);
					this.SendPropertyChanging();
					this._id_pac = value;
					this.SendPropertyChanged("id_pac");
					this.Onid_pacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwisko
		{
			get
			{
				return this._nazwisko;
			}
			set
			{
				if ((this._nazwisko != value))
				{
					this.OnnazwiskoChanging(value);
					this.SendPropertyChanging();
					this._nazwisko = value;
					this.SendPropertyChanged("nazwisko");
					this.OnnazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imie", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string imie
		{
			get
			{
				return this._imie;
			}
			set
			{
				if ((this._imie != value))
				{
					this.OnimieChanging(value);
					this.SendPropertyChanging();
					this._imie = value;
					this.SendPropertyChanged("imie");
					this.OnimieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESEL", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string PESEL
		{
			get
			{
				return this._PESEL;
			}
			set
			{
				if ((this._PESEL != value))
				{
					this.OnPESELChanging(value);
					this.SendPropertyChanging();
					this._PESEL = value;
					this.SendPropertyChanged("PESEL");
					this.OnPESELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacjent_Wizyta", Storage="_Wizytas", ThisKey="id_pac", OtherKey="id_pac")]
		public EntitySet<Wizyta> Wizytas
		{
			get
			{
				return this._Wizytas;
			}
			set
			{
				this._Wizytas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Pacjent = this;
		}
		
		private void detach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Pacjent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rejestracja")]
	public partial class Rejestracja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rej;
		
		private string _user_name;
		
		private EntitySet<Wizyta> _Wizytas;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rejChanging(int value);
    partial void Onid_rejChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    #endregion
		
		public Rejestracja()
		{
			this._Wizytas = new EntitySet<Wizyta>(new Action<Wizyta>(this.attach_Wizytas), new Action<Wizyta>(this.detach_Wizytas));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rej", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rej
		{
			get
			{
				return this._id_rej;
			}
			set
			{
				if ((this._id_rej != value))
				{
					this.Onid_rejChanging(value);
					this.SendPropertyChanging();
					this._id_rej = value;
					this.SendPropertyChanged("id_rej");
					this.Onid_rejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rejestracja_Wizyta", Storage="_Wizytas", ThisKey="id_rej", OtherKey="id_rej")]
		public EntitySet<Wizyta> Wizytas
		{
			get
			{
				return this._Wizytas;
			}
			set
			{
				this._Wizytas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Rejestracja", Storage="_User", ThisKey="user_name", OtherKey="user_name", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Rejestracjas.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Rejestracjas.Add(this);
						this._user_name = value.user_name;
					}
					else
					{
						this._user_name = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Rejestracja = this;
		}
		
		private void detach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Rejestracja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Slownik_badan")]
	public partial class Slownik_badan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _kod;
		
		private string _typ;
		
		private string _nazwa;
		
		private string _opis;
		
		private EntitySet<Badanie_fizykalne> _Badanie_fizykalnes;
		
		private EntitySet<Badanie_lab> _Badanie_labs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnkodChanging(int value);
    partial void OnkodChanged();
    partial void OntypChanging(string value);
    partial void OntypChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnopisChanging(string value);
    partial void OnopisChanged();
    #endregion
		
		public Slownik_badan()
		{
			this._Badanie_fizykalnes = new EntitySet<Badanie_fizykalne>(new Action<Badanie_fizykalne>(this.attach_Badanie_fizykalnes), new Action<Badanie_fizykalne>(this.detach_Badanie_fizykalnes));
			this._Badanie_labs = new EntitySet<Badanie_lab>(new Action<Badanie_lab>(this.attach_Badanie_labs), new Action<Badanie_lab>(this.detach_Badanie_labs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int kod
		{
			get
			{
				return this._kod;
			}
			set
			{
				if ((this._kod != value))
				{
					this.OnkodChanging(value);
					this.SendPropertyChanging();
					this._kod = value;
					this.SendPropertyChanged("kod");
					this.OnkodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typ", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string typ
		{
			get
			{
				return this._typ;
			}
			set
			{
				if ((this._typ != value))
				{
					this.OntypChanging(value);
					this.SendPropertyChanging();
					this._typ = value;
					this.SendPropertyChanged("typ");
					this.OntypChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string opis
		{
			get
			{
				return this._opis;
			}
			set
			{
				if ((this._opis != value))
				{
					this.OnopisChanging(value);
					this.SendPropertyChanging();
					this._opis = value;
					this.SendPropertyChanged("opis");
					this.OnopisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Slownik_badan_Badanie_fizykalne", Storage="_Badanie_fizykalnes", ThisKey="kod", OtherKey="kod")]
		public EntitySet<Badanie_fizykalne> Badanie_fizykalnes
		{
			get
			{
				return this._Badanie_fizykalnes;
			}
			set
			{
				this._Badanie_fizykalnes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Slownik_badan_Badanie_lab", Storage="_Badanie_labs", ThisKey="kod", OtherKey="kod")]
		public EntitySet<Badanie_lab> Badanie_labs
		{
			get
			{
				return this._Badanie_labs;
			}
			set
			{
				this._Badanie_labs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanie_fizykalnes(Badanie_fizykalne entity)
		{
			this.SendPropertyChanging();
			entity.Slownik_badan = this;
		}
		
		private void detach_Badanie_fizykalnes(Badanie_fizykalne entity)
		{
			this.SendPropertyChanging();
			entity.Slownik_badan = null;
		}
		
		private void attach_Badanie_labs(Badanie_lab entity)
		{
			this.SendPropertyChanging();
			entity.Slownik_badan = this;
		}
		
		private void detach_Badanie_labs(Badanie_lab entity)
		{
			this.SendPropertyChanging();
			entity.Slownik_badan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wizyta")]
	public partial class Wizyta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_wizyty;
		
		private string _opis;
		
		private string _diagnoza;
		
		private string _stan;
		
		private System.DateTime _data_rej;
		
		private System.Nullable<System.DateTime> _data_wyk_wizyty;
		
		private int _id_pac;
		
		private int _id_rej;
		
		private int _id_lekarza;
		
		private EntitySet<Badanie_fizykalne> _Badanie_fizykalnes;
		
		private EntitySet<Badanie_lab> _Badanie_labs;
		
		private EntityRef<Lekarz> _Lekarz;
		
		private EntityRef<Pacjent> _Pacjent;
		
		private EntityRef<Rejestracja> _Rejestracja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_wizytyChanging(int value);
    partial void Onid_wizytyChanged();
    partial void OnopisChanging(string value);
    partial void OnopisChanged();
    partial void OndiagnozaChanging(string value);
    partial void OndiagnozaChanged();
    partial void OnstanChanging(string value);
    partial void OnstanChanged();
    partial void Ondata_rejChanging(System.DateTime value);
    partial void Ondata_rejChanged();
    partial void Ondata_wyk_wizytyChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_wyk_wizytyChanged();
    partial void Onid_pacChanging(int value);
    partial void Onid_pacChanged();
    partial void Onid_rejChanging(int value);
    partial void Onid_rejChanged();
    partial void Onid_lekarzaChanging(int value);
    partial void Onid_lekarzaChanged();
    #endregion
		
		public Wizyta()
		{
			this._Badanie_fizykalnes = new EntitySet<Badanie_fizykalne>(new Action<Badanie_fizykalne>(this.attach_Badanie_fizykalnes), new Action<Badanie_fizykalne>(this.detach_Badanie_fizykalnes));
			this._Badanie_labs = new EntitySet<Badanie_lab>(new Action<Badanie_lab>(this.attach_Badanie_labs), new Action<Badanie_lab>(this.detach_Badanie_labs));
			this._Lekarz = default(EntityRef<Lekarz>);
			this._Pacjent = default(EntityRef<Pacjent>);
			this._Rejestracja = default(EntityRef<Rejestracja>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_wizyty", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_wizyty
		{
			get
			{
				return this._id_wizyty;
			}
			set
			{
				if ((this._id_wizyty != value))
				{
					this.Onid_wizytyChanging(value);
					this.SendPropertyChanging();
					this._id_wizyty = value;
					this.SendPropertyChanged("id_wizyty");
					this.Onid_wizytyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string opis
		{
			get
			{
				return this._opis;
			}
			set
			{
				if ((this._opis != value))
				{
					this.OnopisChanging(value);
					this.SendPropertyChanging();
					this._opis = value;
					this.SendPropertyChanged("opis");
					this.OnopisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diagnoza", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string diagnoza
		{
			get
			{
				return this._diagnoza;
			}
			set
			{
				if ((this._diagnoza != value))
				{
					this.OndiagnozaChanging(value);
					this.SendPropertyChanging();
					this._diagnoza = value;
					this.SendPropertyChanged("diagnoza");
					this.OndiagnozaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stan", DbType="VarChar(20)")]
		public string stan
		{
			get
			{
				return this._stan;
			}
			set
			{
				if ((this._stan != value))
				{
					this.OnstanChanging(value);
					this.SendPropertyChanging();
					this._stan = value;
					this.SendPropertyChanged("stan");
					this.OnstanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_rej", DbType="DateTime NOT NULL")]
		public System.DateTime data_rej
		{
			get
			{
				return this._data_rej;
			}
			set
			{
				if ((this._data_rej != value))
				{
					this.Ondata_rejChanging(value);
					this.SendPropertyChanging();
					this._data_rej = value;
					this.SendPropertyChanged("data_rej");
					this.Ondata_rejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_wyk_wizyty", DbType="DateTime")]
		public System.Nullable<System.DateTime> data_wyk_wizyty
		{
			get
			{
				return this._data_wyk_wizyty;
			}
			set
			{
				if ((this._data_wyk_wizyty != value))
				{
					this.Ondata_wyk_wizytyChanging(value);
					this.SendPropertyChanging();
					this._data_wyk_wizyty = value;
					this.SendPropertyChanged("data_wyk_wizyty");
					this.Ondata_wyk_wizytyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pac", DbType="Int NOT NULL")]
		public int id_pac
		{
			get
			{
				return this._id_pac;
			}
			set
			{
				if ((this._id_pac != value))
				{
					if (this._Pacjent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pacChanging(value);
					this.SendPropertyChanging();
					this._id_pac = value;
					this.SendPropertyChanged("id_pac");
					this.Onid_pacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rej", DbType="Int NOT NULL")]
		public int id_rej
		{
			get
			{
				return this._id_rej;
			}
			set
			{
				if ((this._id_rej != value))
				{
					if (this._Rejestracja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rejChanging(value);
					this.SendPropertyChanging();
					this._id_rej = value;
					this.SendPropertyChanged("id_rej");
					this.Onid_rejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lekarza", DbType="Int NOT NULL")]
		public int id_lekarza
		{
			get
			{
				return this._id_lekarza;
			}
			set
			{
				if ((this._id_lekarza != value))
				{
					if (this._Lekarz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_lekarzaChanging(value);
					this.SendPropertyChanging();
					this._id_lekarza = value;
					this.SendPropertyChanged("id_lekarza");
					this.Onid_lekarzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wizyta_Badanie_fizykalne", Storage="_Badanie_fizykalnes", ThisKey="id_wizyty", OtherKey="id_wizyty")]
		public EntitySet<Badanie_fizykalne> Badanie_fizykalnes
		{
			get
			{
				return this._Badanie_fizykalnes;
			}
			set
			{
				this._Badanie_fizykalnes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wizyta_Badanie_lab", Storage="_Badanie_labs", ThisKey="id_wizyty", OtherKey="id_wizyty")]
		public EntitySet<Badanie_lab> Badanie_labs
		{
			get
			{
				return this._Badanie_labs;
			}
			set
			{
				this._Badanie_labs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lekarz_Wizyta", Storage="_Lekarz", ThisKey="id_lekarza", OtherKey="id_lekarza", IsForeignKey=true)]
		public Lekarz Lekarz
		{
			get
			{
				return this._Lekarz.Entity;
			}
			set
			{
				Lekarz previousValue = this._Lekarz.Entity;
				if (((previousValue != value) 
							|| (this._Lekarz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lekarz.Entity = null;
						previousValue.Wizytas.Remove(this);
					}
					this._Lekarz.Entity = value;
					if ((value != null))
					{
						value.Wizytas.Add(this);
						this._id_lekarza = value.id_lekarza;
					}
					else
					{
						this._id_lekarza = default(int);
					}
					this.SendPropertyChanged("Lekarz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacjent_Wizyta", Storage="_Pacjent", ThisKey="id_pac", OtherKey="id_pac", IsForeignKey=true)]
		public Pacjent Pacjent
		{
			get
			{
				return this._Pacjent.Entity;
			}
			set
			{
				Pacjent previousValue = this._Pacjent.Entity;
				if (((previousValue != value) 
							|| (this._Pacjent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacjent.Entity = null;
						previousValue.Wizytas.Remove(this);
					}
					this._Pacjent.Entity = value;
					if ((value != null))
					{
						value.Wizytas.Add(this);
						this._id_pac = value.id_pac;
					}
					else
					{
						this._id_pac = default(int);
					}
					this.SendPropertyChanged("Pacjent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rejestracja_Wizyta", Storage="_Rejestracja", ThisKey="id_rej", OtherKey="id_rej", IsForeignKey=true)]
		public Rejestracja Rejestracja
		{
			get
			{
				return this._Rejestracja.Entity;
			}
			set
			{
				Rejestracja previousValue = this._Rejestracja.Entity;
				if (((previousValue != value) 
							|| (this._Rejestracja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rejestracja.Entity = null;
						previousValue.Wizytas.Remove(this);
					}
					this._Rejestracja.Entity = value;
					if ((value != null))
					{
						value.Wizytas.Add(this);
						this._id_rej = value.id_rej;
					}
					else
					{
						this._id_rej = default(int);
					}
					this.SendPropertyChanged("Rejestracja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanie_fizykalnes(Badanie_fizykalne entity)
		{
			this.SendPropertyChanging();
			entity.Wizyta = this;
		}
		
		private void detach_Badanie_fizykalnes(Badanie_fizykalne entity)
		{
			this.SendPropertyChanging();
			entity.Wizyta = null;
		}
		
		private void attach_Badanie_labs(Badanie_lab entity)
		{
			this.SendPropertyChanging();
			entity.Wizyta = this;
		}
		
		private void detach_Badanie_labs(Badanie_lab entity)
		{
			this.SendPropertyChanging();
			entity.Wizyta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_name;
		
		private string _password;
		
		private System.DateTime _data_konc;
		
		private string _role;
		
		private string _nazwisko;
		
		private string _imie;
		
		private EntitySet<K_Lab> _K_Labs;
		
		private EntitySet<Lab> _Labs;
		
		private EntitySet<Lekarz> _Lekarzs;
		
		private EntitySet<Rejestracja> _Rejestracjas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Ondata_koncChanging(System.DateTime value);
    partial void Ondata_koncChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OnnazwiskoChanging(string value);
    partial void OnnazwiskoChanged();
    partial void OnimieChanging(string value);
    partial void OnimieChanged();
    #endregion
		
		public User()
		{
			this._K_Labs = new EntitySet<K_Lab>(new Action<K_Lab>(this.attach_K_Labs), new Action<K_Lab>(this.detach_K_Labs));
			this._Labs = new EntitySet<Lab>(new Action<Lab>(this.attach_Labs), new Action<Lab>(this.detach_Labs));
			this._Lekarzs = new EntitySet<Lekarz>(new Action<Lekarz>(this.attach_Lekarzs), new Action<Lekarz>(this.detach_Lekarzs));
			this._Rejestracjas = new EntitySet<Rejestracja>(new Action<Rejestracja>(this.attach_Rejestracjas), new Action<Rejestracja>(this.detach_Rejestracjas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_konc", DbType="DateTime NOT NULL")]
		public System.DateTime data_konc
		{
			get
			{
				return this._data_konc;
			}
			set
			{
				if ((this._data_konc != value))
				{
					this.Ondata_koncChanging(value);
					this.SendPropertyChanging();
					this._data_konc = value;
					this.SendPropertyChanged("data_konc");
					this.Ondata_koncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwisko
		{
			get
			{
				return this._nazwisko;
			}
			set
			{
				if ((this._nazwisko != value))
				{
					this.OnnazwiskoChanging(value);
					this.SendPropertyChanging();
					this._nazwisko = value;
					this.SendPropertyChanged("nazwisko");
					this.OnnazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imie", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string imie
		{
			get
			{
				return this._imie;
			}
			set
			{
				if ((this._imie != value))
				{
					this.OnimieChanging(value);
					this.SendPropertyChanging();
					this._imie = value;
					this.SendPropertyChanged("imie");
					this.OnimieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_K_Lab", Storage="_K_Labs", ThisKey="user_name", OtherKey="user_name")]
		public EntitySet<K_Lab> K_Labs
		{
			get
			{
				return this._K_Labs;
			}
			set
			{
				this._K_Labs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Lab", Storage="_Labs", ThisKey="user_name", OtherKey="user_name")]
		public EntitySet<Lab> Labs
		{
			get
			{
				return this._Labs;
			}
			set
			{
				this._Labs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Lekarz", Storage="_Lekarzs", ThisKey="user_name", OtherKey="user_name")]
		public EntitySet<Lekarz> Lekarzs
		{
			get
			{
				return this._Lekarzs;
			}
			set
			{
				this._Lekarzs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Rejestracja", Storage="_Rejestracjas", ThisKey="user_name", OtherKey="user_name")]
		public EntitySet<Rejestracja> Rejestracjas
		{
			get
			{
				return this._Rejestracjas;
			}
			set
			{
				this._Rejestracjas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_K_Labs(K_Lab entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_K_Labs(K_Lab entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Labs(Lab entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Labs(Lab entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Lekarzs(Lekarz entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Lekarzs(Lekarz entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Rejestracjas(Rejestracja entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Rejestracjas(Rejestracja entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
